2*pt(2,5)-1
pnorm(65,52.5,sd = 5*sqrt(3))
(4*qnorm(0.95, lower.tail = TRUE)^2 * 3.2^2)/(0.3^2)
(4*3.2^2)/(0.3^2)
qnorm(0.05, lower.tail = FALSE)
var(c(7.5, 8.2, 9.1, 7.2, 7.3, 8.4, 9.1, 7.5, 6.3, 8.2, 7.1, 9.1))
sqrt(11/26.757)*sqrt(0.8287879)
sqrt(11/2.603)*sqrt(0.8287879)
mean(c(8.8, 3.8, 10.1, 8.0, 5.0, 5.2, 6.7, 9.3, 6.9, 3.2, 9.7, 7.2, 6.5, 9.7, 5.0))
var(c(8.8, 3.8, 10.1, 8.0, 5.0, 5.2, 6.7, 9.3, 6.9, 3.2, 9.7, 7.2, 6.5, 9.7, 5.0))
7.007 -2.145*(5.003/sqrt(14))
7.007 +2.145*(5.003/sqrt(14))
7.007 +2.145*(sqrt(5.003)/sqrt(14))
7.007 -2.145*(sqrt(5.003)/sqrt(14))
v = c(50,75)
M = matrix(c(100,50,50,100), nrow = 2)
M
v%*%M%*%t(v)
v = t(v)
v%*%M%*%t(v)
50^3*9.5
sqrt(1187500)
5000-4425
575/1089.725
pnorm(0.5277, lower.tail = TRUE)
pnorm(0.5277, lower.tail = FALSE)
qF(0.95,12,10)
qnorm(0.5)
qt(0.5,3)
qchisq(0.5,3)
qf(0.5,3)
qf(0.5,3,4)
? band_weigth
??band_weigth
install.packages(evaluate)
install.packages(jsonlite)
install.packages(htmlwidgets)
install.packages('evaluate')
install.packages(jsonlite)
install.packages(htmlwidgets)
install.packages('jsonlite')
install.packages('htmlwidgets')
rstudioapi::getPandocPath()
install.packages('pandoc')
#| label: 5f9c4ab0
x<-c(1,2)
plot(x,x^2)
# lambda = 30 time in hours, being t = 0 == 6 am
# We are asked for P(N5 - N3 > 65) = P(N2 > 65) = 1 - P(N2 <= 65)
1- ppois(65, 30)
# lambda = 30 time in hours, being t = 0 == 6 am
# We are asked for P(N5 - N3 > 65) = P(N2 > 65) = 1 - P(N2 <= 65)
1- ppois(65, 2*30)
## EXERCISE 2
# Joe receives whatsapp (WA) messages starting at 10am at the rate of
# 10 WAs/h according to a Poisson process. Find the probability that he
# will receive exactly 18 WAs by noon and 70 WAs by 5pm
# ---
# lambda = 10, we are asked for, setting t in hours 10 am == t=0
# P(N2 = 18, N7 = 70) = P(N2 = 18, N7 - N2 = 52) = [Indep. Increments] =
#   = P(N2 = 18)*P(N7-N2 = N5 = 52)
dpois(18, 2*10)*dpois(52, 5*10)
# (a) In a 60-min. game, find the prob. that a 4th goal occurs in the last 5 min
# ---
# lambda = 1/15
# We are asked for P(55<S4<=60), with S4 = Time of the 4th goal ~ Gamma(4, lambda)
pgamma(60, 4, 1/15) - pgamma(55, 4, 1/15)
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1)
dpois(3, 55*1/15)*(1- ppois(1, 5*1/15))
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1)
dpois(3, 55*1/15)*(1- ppois(0, 5*1/15))
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1) = P(N55 = 3)*(1-P(N5 < 1))
# = P(N55 = 3)*(1-P(N5 = 0))
dpois(3, 55*1/15)*(1- ppois(0, 6*1/15))
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1) = P(N55 = 3)*(1-P(N5 < 1))
# = P(N55 = 3)*(1-P(N5 = 0))
dpois(3, 55*1/15)*(1- dpois(0, 6*1/15))
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1) = P(N55 = 3)*(1-P(N5 < 1))
# = P(N55 = 3)*(1-P(N5 = 0))
dpois(3, 55*1/15)*(1- dpois(1, 6*1/15))
# Could be done as P(N55 =3, N60 - N55 <=1) = P(N55 = 3)*P(N5 >=1) = P(N55 = 3)*(1-P(N5 < 1))
# = P(N55 = 3)*(1-P(N5 = 0))
dpois(3, 55*1/15)*(1- ppois(1, 6*1/15))
# (a) In a 60-min. game, find the prob. that a 4th goal occurs in the last 5 min
# (b) If at least 3 goals are scored in a game, what is the mean time of the 3rd goal?
# ---
# (a)
# lambda = 1/15
# We are asked for P(55<S4<=60), with S4 = Time of the 4th goal ~ Gamma(4, lambda)
pgamma(60, 4, 1/15) - pgamma(55, 4, 1/15)
integrate(
function(t) t * (lambda^shape * t^(shape-1) * exp(-lambda * t) / factorial(shape-1)),
lower = 0, upper = 60
)$value
lambda = 1/15
integrate(
function(t) t * (lambda^shape * t^(shape-1) * exp(-lambda * t) / factorial(shape-1)),
lower = 0, upper = 60
)$value
shape = 3
integrate(
function(t) t * (lambda^shape * t^(shape-1) * exp(-lambda * t) / factorial(shape-1)),
lower = 0, upper = 60
)$value
integral/PS3_60
integral <- 25.49384
integral/PS3_60
PS3_60 <- pgamma(60, 3, 1/15)
integral <- 25.49384
integral/PS3_60
+ )$value
integral <- integrate(
+     function(t) t * (lambda^shape * t^(shape-1) * exp(-lambda * t) / factorial(shape-1)),
+     lower = 0, upper = 60)$value
integral <- integrate(
function(t) t * (lambda^shape * t^(shape-1) * exp(-lambda * t) / factorial(shape-1)),
lower = 0, upper = 60)$value
integral/PS3_60
# Assume births occur on a maternity ward as a Poisson process w/ rate
# 2 births/h. Each birth is male or female indep. w/ prob. p = 0.519 and
# 1 âˆ’p
# (a) On an 8-h shift, what is the mean and standard dev. of the
# number of female births?
# (b) Find the prob. that only girls were born between 2 and 5 pm
# ---
# lambda_total = 2, lambda_male = 2*p, lambda_fem = 2*(1-p)
# N_t = Total counting process, M_t = Male counting process, F_t = Female counting process
# We are asked for F_8~Pois(8*lambda_fem)
lambda = 2
p=0.519
lambda_f = 2*(1-p)
# E(F_8) = 8*2*(1-p)
8*2*(1-p)
# Sd(F_8) = sqrt(Var(F_8)) = sqrt(8*2*(1-p))
sqrt(8*2*(1-p))
# (b) We are asked for P(M_3 = 0, F_3 > 0) = [Indip thin processes] = P(M_3 = 0)*P(F_3 > 0)
dpois(0,3*2*p)*(1-ppois(0, 3*2*(1-p)))
pgamma(3, 60, 20)-pgamma(2.9, 60, 20)
# (b) We are asked for P(2.9<=S60<=3|N3 = 60), U_{(60)} = max U_i order statistic of U[0,3]
# P(2.9<=S60<=3|N3 = 60) = P(2.9<=U_{(60)}<=3) = P(2.9<=U_{(60)}) = 1- P(max U_i<2.9) =
# 1- (P(U[0,3] <2.9))^60
1- (punif(2.9, 0,3))^60
## EXERCISE 6
# Students arrive at a cafeteria as a nonhomogeneous Poisson process. The
# arrival rate grows linearly from 100 to 200 students/h between 11am and noon.
# The rate stays constant for the next two hours, and then decreases linearly to
# 100 from 2 to 3pm. Find the prob. that at least 400 people arrive in the
# cafeteria between 11:30am and 1:30pm
# ---
# The function is constructed in theory
# We are asked for P(N2.5 - N0.5 > 400)
# The expectation of N2.5 - N0.5 is int_0.5^2-5 lambda(t)dt =
100+50-100*0.5-50*(0.5)^2 + 200*1.5
## EXERCISE 6
# Students arrive at a cafeteria as a nonhomogeneous Poisson process. The
# arrival rate grows linearly from 100 to 200 students/h between 11am and noon.
# The rate stays constant for the next two hours, and then decreases linearly to
# 100 from 2 to 3pm. Find the prob. that at least 400 people arrive in the
# cafeteria between 11:30am and 1:30pm
# ---
# The function is constructed in theory
# We are asked for P(N2.5 - N0.5 > 400)
# The expectation of N2.5 - N0.5 is int_0.5^2-5 lambda(t)dt =
lambda = 100+50-100*0.5-50*(0.5)^2 + 200*1.5
# So N2.5 - N0.5~Pois(lambda)
1-ppois(400, lambda)
# So N2.5 - N0.5~Pois(lambda)
1-ppois(399, lambda)
##### Matrix powers ###############################
# matrixpower(mat,k) mat^k
#
matrixpower <- function(mat,k) {
if (k == 0) return (diag(dim(mat)[1]))
if (k == 1) return(mat)
if (k > 1) return( mat %*% matrixpower(mat, k-1))
}
markov <- function(init,mat,n,labels) {
if (missing(labels)) labels <- 1:length(init)
simlist <- numeric(n+1)
states <- 1:length(init)
simlist[1] <- sample(states,1,prob=init)
for (i in 2:(n+1))
{ simlist[i] <- sample(states,1,prob=mat[simlist[i-1],]) }
labels[simlist]
}
P = matrix(c(
0.2, 0.6, 0.2,
0.1, 0.8, 0.1,
0.1, 0.6, 0.3), byrow = TRUE)
P
P = matrix(c(
0.2, 0.6, 0.2,
0.1, 0.8, 0.1,
0.1, 0.6, 0.3), nrow = 3)
P
P = matrix(c(
0.2, 0.6, 0.2,
0.1, 0.8, 0.1,
0.1, 0.6, 0.3), nrow = 3, byroe = TRUE)
P = matrix(c(
0.2, 0.6, 0.2,
0.1, 0.8, 0.1,
0.1, 0.6, 0.3), nrow = 3, byrow = TRUE)
P
p2 = p0%*%matrixpower(P,2)
# ConsideraMarkovchainmodelwithstatesS={1,2,3}fordailyweather
# evolutioninacity,w/1=rain,2=snowand3=clear,andwithtrans.probab.
#
#           0.2 0.6 0.2
#   P  =    0.1 0.8 0.1
#           0.1 0.6 0.3
#
# Supposethat,fortomorrow,a50%-50%chanceofrainandsnowis
# predicted.Findtheprobabilitythat itwillsnow2dayslater
# ---
p0 = (0.5,0.5,0)
p2 = p0%*%matrixpower(P,2)
# ConsideraMarkovchainmodelwithstatesS={1,2,3}fordailyweather
# evolutioninacity,w/1=rain,2=snowand3=clear,andwithtrans.probab.
#
#           0.2 0.6 0.2
#   P  =    0.1 0.8 0.1
#           0.1 0.6 0.3
#
# Supposethat,fortomorrow,a50%-50%chanceofrainandsnowis
# predicted.Findtheprobabilitythat itwillsnow2dayslater
# ---
p0 = (0.5,0.5,0)
# ConsideraMarkovchainmodelwithstatesS={1,2,3}fordailyweather
# evolutioninacity,w/1=rain,2=snowand3=clear,andwithtrans.probab.
#
#           0.2 0.6 0.2
#   P  =    0.1 0.8 0.1
#           0.1 0.6 0.3
#
# Supposethat,fortomorrow,a50%-50%chanceofrainandsnowis
# predicted.Findtheprobabilitythat itwillsnow2dayslater
# ---
p0 = c(0.5,0.5,0)
p2 = p0%*%matrixpower(P,2)
p2
p0 = rep(0.25,4)
p0
P = matrix(c(
0.0, 0.5, 0.5, 0.0,
0.5, 0.0, 0.5, 0.0,
0.4, 0.0, 0.0, 0.6,
0.0, 0.2, 0.6, 0.2), nrow = 4, byrow = TRUE)
P
# P{X3=4,X5=4,X6=3}=p(3)_4 p(2)_44 p_43
p0%*%matrixpower(P,3)[4]*matrixpower(P,2)[4,4]*P[4,3]
# P{X3=4,X5=4,X6=3}=p(3)_4 p(2)_44 p_43
(p0%*%matrixpower(P,3))[4]*matrixpower(P,2)[4,4]*P[4,3]
#0.4 * 0.6 *0.248
0.4 * 0.6 *0.248
P[4,3]
matrixpower(P,2)[4,4]
p0%*%matrixpower(P,3))[4]
(p0%*%matrixpower(P,3))[4]
library(readxl)
num_vars <- c("ref.hip.zona", "antig", "Poca_limp", "PM10", "Pobl.0_14_div_Poblac.Total" ,   "PoblJubilada_div_Poblac.Total", "Inmigrantes.porc", "Pocas_zonas")
# execute
data <- read_excel("Data/data_train.xlsx")
setwd("C:/Users/Nicolas/Desktop/GitHub/uc3m_regression_competition")
# execute
data <- read_excel("Data/data_train.xlsx")
data_num = data[, c('precio.house.m2', num_vars)]
data_num$y = log(data_num$precio.house.m2)
data_num$precio.house.m2<- NULL
predictors <- setdiff(num_vars, "y")
gam_formula <- as.formula(
paste("y ~", paste(c(paste0("s(", predictors, ", bs='ps', k = 40, m = 3)"),cat_vars), collapse = " + "))
)
cat_vars <- NULL
gam_formula <- as.formula(
paste("y ~", paste(c(paste0("s(", predictors, ", bs='ps', k = 40, m = 3)"),cat_vars), collapse = " + "))
)
gam_model <- gam(gam_formula, data = data_train)
## Fit P-Splines + categorical (GAM) Model
library(mgcv)
gam_model <- gam(gam_formula, data = data_num)
gam_model
summary(gam_model)
predictors = setdiff(predictors, c('PM10','Inmigrantes.porc'))
gam_model <- gam(gam_formula, data = data_num)
summary(gam_model)
gam_formula <- as.formula(
paste("y ~", paste(c(paste0("s(", predictors, ", bs='ps', k = 40, m = 3)"),cat_vars), collapse = " + "))
)
gam_model <- gam(gam_formula, data = data_num)
summary(gam_model)
